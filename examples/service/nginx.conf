events {
    worker_connections 1024;
}

http {
    upstream arbiter_id_backend {
        # Health check and load balancing configuration
        least_conn;

        server arbiterid-0:8080 max_fails=3 fail_timeout=30s;
        server arbiterid-1:8080 max_fails=3 fail_timeout=30s;
        server arbiterid-2:8080 max_fails=3 fail_timeout=30s;
        server arbiterid-3:8080 max_fails=3 fail_timeout=30s;
    }

    # Basic configuration
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'upstream_addr=$upstream_addr '
                   'upstream_response_time=$upstream_response_time '
                   'request_time=$request_time';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            proxy_pass http://arbiter_id_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Health check configuration
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # ID generation endpoint
        location /generate {
            proxy_pass http://arbiter_id_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Connection and timeout configuration
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;

            # Buffer configuration
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # Service information endpoint
        location /info {
            proxy_pass http://arbiter_id_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Root path
        location / {
            proxy_pass http://arbiter_id_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Nginx status monitoring endpoint
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }
}